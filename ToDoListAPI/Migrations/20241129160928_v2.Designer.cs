// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoListAPI.Models;

#nullable disable

namespace ToDoListAPI.Migrations
{
    [DbContext(typeof(TaskDBContext))]
    [Migration("20241129160928_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoListAPI.Models.TaskManagment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("creationDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("dueDate")
                        .HasColumnType("date");

                    b.Property<int>("priority")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Write and complete the project documentation.",
                            Title = "Complete Documentation",
                            creationDate = new DateOnly(2024, 11, 29),
                            dueDate = new DateOnly(2024, 12, 15),
                            priority = 2,
                            status = false
                        },
                        new
                        {
                            Id = 2,
                            Description = "Review the code before submission.",
                            Title = "Code Review",
                            creationDate = new DateOnly(2024, 11, 25),
                            dueDate = new DateOnly(2024, 12, 10),
                            priority = 1,
                            status = false
                        },
                        new
                        {
                            Id = 3,
                            Description = "Test the functionality of the project.",
                            Title = "Testing",
                            creationDate = new DateOnly(2024, 11, 28),
                            dueDate = new DateOnly(2024, 12, 5),
                            priority = 0,
                            status = true
                        },
                        new
                        {
                            Id = 4,
                            Description = "Discuss the project requirements with the client.",
                            Title = "Client Meeting",
                            creationDate = new DateOnly(2024, 11, 30),
                            dueDate = new DateOnly(2024, 12, 1),
                            priority = 2,
                            status = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
